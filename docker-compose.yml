services:
  postgres:
    image: postgres:15
    container_name: savr-postgres
    environment:
      POSTGRES_DB: savr_db
      POSTGRES_USER: savr_user
      POSTGRES_PASSWORD: savr_password
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - savr-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U savr_user -d savr_db']
      interval: 10s
      timeout: 5s
      retries: 5
  adminer:
    image: adminer:latest
    container_name: savr-adminer
    ports:
      - '8080:8080'
    networks:
      - savr-network
    depends_on:
      - postgres

  backend:
    build: ./server
    container_name: savr-backend
    ports:
      - '8000:8000'
    volumes:
      - ./server:/app
    env_file:
      - ./.env
    environment:
      - SQL_DB_LINK=postgresql://savr_user:savr_password@postgres:5432/savr_db
    networks:
      - savr-network
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    image: node:22.12
    container_name: savr-frontend
    working_dir: /app
    volumes:
      - ./client/savr-client:/app
    ports:
      - '3000:3000' 
    environment:
      - WATCHPACK_POLLING=true
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend
    env_file:
      - ./.env
    networks:
      - savr-network

volumes:
  postgres_data:

networks:
  savr-network:
    driver: bridge
